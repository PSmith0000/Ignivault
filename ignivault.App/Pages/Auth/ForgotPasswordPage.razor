@page "/auth/forgot-password"
@layout LoginLayout
@inject IAuthApiClient AuthApiClient

<PageTitle>Forgot Password</PageTitle>

<SfCard Style="width: 400px;">
    <CardHeader Title="Reset Your Password"></CardHeader>
    <CardContent>
        @if (messageSent)
        {
            <div class="alert alert-success">
                <p>If an account with this email exists, a password reset link has been sent.</p>
                <p>Please check your inbox.</p>
            </div>
            <a href="/auth/login">Back to Login</a>
        }
        else
        {
            <p>Enter your email address and we will send you a link to reset your password.</p>
            <EditForm Model="forgotPasswordModel" OnValidSubmit="HandleForgotPasswordAsync">
                <DataAnnotationsValidator />

                <div class="form-group mb-4">
                    <SfTextBox @bind-Value="forgotPasswordModel.Email"
                               Placeholder="Email"
                               FloatLabelType="FloatLabelType.Auto"
                               Type="InputType.Email"></SfTextBox>
                </div>

                <ValidationSummary />

                <div class="mt-4">
                    <SfButton type="submit" IsPrimary="true" Disabled="@isLoading" Content="@(isLoading ? "Sending..." : "Send Reset Link")"></SfButton>
                </div>
            </EditForm>
        }
    </CardContent>
    <CardFooter>
        <div class="d-flex justify-content-end">
            <a href="/auth/login">Remember your password?</a>
        </div>
    </CardFooter>
</SfCard>

@code {
    private readonly ForgotPasswordRequestDto forgotPasswordModel = new();
    private bool isLoading = false;
    private bool messageSent = false;

    private async Task HandleForgotPasswordAsync()
    {
        isLoading = true;

        await AuthApiClient.ForgotPasswordAsync(forgotPasswordModel);

        messageSent = true;
        isLoading = false;
    }
}